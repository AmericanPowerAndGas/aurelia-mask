{"version":3,"file":"mask.js","sourceRoot":"","sources":["../src/mask.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AAEnC;IAAA;IAWA,CAAC;IAVG,mCAAM,GAAN,UAAO,KAAa,EAAE,MAAc,EAAE,WAAoB,EAAE,WAAmB;QAC3E,IAAI,MAAM,GAAG,kBAAS,CAAC,EAAC,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,KAAK,EAAC,CAAC,CAAC;QACvH,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACrC,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACD,qCAAQ,GAAR,UAAS,KAAa,EAAE,MAAc,EAAE,WAAoB,EAAE,WAAmB;QAC7E,IAAI,MAAM,GAAG,kBAAS,CAAC,EAAC,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,aAAa,EAAE,KAAK,EAAC,CAAC,CAAC;QACvH,IAAI,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACL,yBAAC;AAAD,CAAC,AAXD,IAWC;AAXY,gDAAkB","sourcesContent":["import {getMasker} from \"./masker\";\n\nexport class MaskValueConverter {\n    toView(value: string, format: string, bindMasking: boolean, placeholder: string): string {\n        var masker = getMasker({maskFormat: format, bindMasking: bindMasking, placeholder: placeholder, aspnetMasking: false});\n        var result = masker.maskValue(value);\n        return result;\n    }\n    fromView(value: string, format: string, bindMasking: boolean, placeholder: string): string {\n        var masker = getMasker({maskFormat: format, bindMasking: bindMasking, placeholder: placeholder, aspnetMasking: false});\n        var result = masker.unmaskValue(value);\n        return result;\n    }\n}\n\n\n"]}