import { Masker } from "./masker";
export declare class MaskedInput {
    element: Element;
    inputElement: HTMLInputElement;
    value: string;
    mask: string;
    inputId: string;
    inputClass: string;
    disabled: boolean;
    bindMasking: boolean;
    placeholder: string;
    masker: Masker;
    preventBackspace: boolean;
    oldValue: string;
    oldValueUnmasked: string;
    oldCaretPosition: number;
    oldSelectionLength: number;
    caretPos: number;
    keyDownHandler: any;
    keyUpHandler: any;
    inputHandler: any;
    clickHandler: any;
    focusHandler: any;
    isAttached: boolean;
    constructor(element: Element);
    bind(): void;
    attached(): void;
    detached(): void;
    maxCaretPos: number;
    minCaretPos: number;
    onClick(e: any): void;
    unmaskedUIValue: string;
    unmaskedModelValue: string;
    isAddition(): boolean;
    isDeletion(): boolean;
    onInput(e: any): void;
    onFocus(e: any): void;
    onKeyUp(e: any): void;
    updateUIValue(valUnmasked: any, caretBumpBack: any, caretPos: any, caretPosOld: any): void;
    getSelectionLength(): any;
    onKeyDown(e: KeyboardEvent): void;
    getCaretPosition(): any;
    isValidCaretPosition(pos: any): boolean;
    setCaretPosition(pos: any): number;
    isFocused(): boolean;
    isHidden(): boolean;
    maskChanged(): void;
    valueChanged(): void;
}
